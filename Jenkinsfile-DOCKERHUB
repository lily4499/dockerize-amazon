pipeline {
    agent any 

    options {
        timeout(time: 10, unit: 'MINUTES')
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('lily-docker-credentials')
        APP_NAME = "laly9999/amazon-app"
    }

    stages { 
        stage('SCM Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/lily4499/Amazon-clone-Dockerized.git'
            }
        }
        
        stage('Run Sonarqube') {
            environment {
                scannerHome = tool 'ibt-sonarqube';
            }
            steps {
                withSonarQubeEnv(credentialsId: 'ibt-sonar', installationName: 'IBT sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        
        stage('Build docker image') {
            steps {  
                sh 'docker build -t $APP_NAME:$BUILD_NUMBER .'
            }
        }
        
        stage('login to dockerhub') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        
        stage('Trivy Scan (Aqua)') {
            steps {
                sh 'trivy image $APP_NAME:$BUILD_NUMBER'
            }
        }
        
        stage('push image') {
            steps {
                sh 'docker push $APP_NAME:$BUILD_NUMBER'
            }
        }
        
        stage('Trigger ManifestUpdate') {
            steps {
                build job: 'argocd-manifest-amazon', parameters: [string(name: 'IMAGETAG', value: env.BUILD_NUMBER)]
            } 
        }
    }

    post {
        always {
            emailext subject: "Build Notification - ${currentBuild.fullDisplayName}",
                      body: "Build ${currentBuild.fullDisplayName} finished with result: ${currentBuild.currentResult}",
                      to: "konissil@gmail.com",
                      attachLog: true
        }
    }
}

